type Debug @entity(immutable: true) {
  id: Bytes!
  storedHash: Bytes! # bytes32
  suppliedHash: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OptiTaskResponded @entity(immutable: true) {
  id: Bytes!
  taskIndex: BigInt! # uint32
  task_accountAddress: Bytes! # address
  task_stakingAddress: String! # string
  task_taskCreatedBlock: BigInt! # uint32
  operator: Bytes! # address
  signature: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewOptiTaskCreated @entity(immutable: true) {
  id: Bytes!
  taskIndex: BigInt! # uint32
  task_accountAddress: Bytes! # address
  task_stakingAddress: String! # string
  task_taskCreatedBlock: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardsInitiatorUpdated @entity(immutable: true) {
  id: Bytes!
  prevRewardsInitiator: Bytes! # address
  newRewardsInitiator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AdminChanged @entity(immutable: true) {
  id: Bytes!
  previousAdmin: Bytes! # address
  newAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BeaconUpgraded @entity(immutable: true) {
  id: Bytes!
  beacon: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
